# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# Project-specific exclusions
logs/

# Ignore generated JSON files (logs, metrics, etc.)
logs/**/*.json
*.metrics.json
*.performance.json
miner_metrics.json
proxy_server/db/*.json
# Ignore any other generated JSON files
*.data.json
*.config.json

# Media and Document Files
# Audio files
*.wav
*.mp3
*.aac
*.ogg
*.flac
*.m4a
*.wma

# Video files
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.webm
*.mkv
*.m4v
*.3gp
*.mpg
*.mpeg

# Document files
*.pdf
*.doc
*.docx
*.rtf
*.odt
*.pages
*.xls
*.xlsx
*.csv
*.ppt
*.pptx
*.key

# Text files - ignore most but keep important ones
*.txt
!requirements*.txt
!README*.txt
!LICENSE*.txt
!CHANGELOG*.txt
!CONTRIBUTING*.txt
!AUTHORS*.txt
!HISTORY*.txt

# Image files
*.jpg
*.jpeg
*.png
*.gif
*.bmp
*.tiff
*.svg
*.ico
*.webp

# Archive files
*.zip
*.rar
*.7z
*.tar
*.gz
*.bz2
*.xz
*.lzma
*.lz4
*.zst

# Ignore temporary text files but keep important ones
*.tmp.txt
*.log.txt

# Ignore proxy server generated directories
proxy_server/db/
proxy_server/local_storage/
proxy_server/proxy_server/

# File processing and storage directories
uploads/
downloads/
temp/
cache/
processed_files/
raw_files/
output_files/
test_files/
sample_files/
demo_files/
example_files/

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Additional project exclusions
*.db
*.sqlite
*.sqlite3
.env.local
.env.production

# Logs and temporary files
logs/
*.log.*
*.tmp
*.temp
*.cache

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Additional IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

testing/

# Editors
.vscode/settings.json

# Bittensor Subnet Specific Exclusions
# Logs and performance data
logs/
*.log
performance_*.json
miner_metrics.json

# Python cache files
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
*.so

# Distribution and build files
build/
dist/
*.egg-info/
bittensor_subnet_template.egg-info/

# Environment and dependencies
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
.dependencies_installed

# OS specific files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary and cache files
*.tmp
*.temp
*.swp
*.swo
*~

# Wandb (Weights & Biases) logs
wandb/
wandb/**/files/requirements.txt
wandb/**/files/*.py
wandb/**/files/*.json

# Test outputs and temporary files
testing/
.coverage
.pytest_cache/

# Additional development files
*.bak
*.backup
*.orig
*.rej
*.patch
*.diff

# Database files
*.db
*.sqlite
*.sqlite3
*.sql
*.dump

# Configuration backups
*.conf.bak
*.config.bak
*.env.bak
